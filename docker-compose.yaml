version: '3.5'

services:
  fullstack-app:
    container_name: go-app-server
    #Runs Dockerfile to build the application
    build: .
    ports:
      - "8080:5000"
    restart: on-failure
    #Dependencies name base on other services in compose file
    depends_on:
      - fullstack-postgres
      - fullstack-redis
    networks:
      - fullstack
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable
      - REDIS_URL=redis://:@${REDIS_HOST}:${REDIS_PORT}

  fullstack-postgres:
    image: postgres
    container_name: go-app-postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '5432:5432'
    networks:
      - fullstack

  fullstack-redis:
    image: redis
    container_name: go-app-redis
    ports:
      - "6379:6379"
    networks:
      - fullstack

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - fullstack-postgres
    ports:
      - "5050:80"
    networks:
      - fullstack
    restart: unless-stopped

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on:
      - fullstack-redis
    environment:
      - REDIS_HOSTS=local:${REDIS_HOST}:${REDIS_PORT}
    ports:
      - "8081:8081"
    networks:
      - fullstack

# Networks to be created to facilitate communication between containers
networks:
  fullstack:
    driver: bridge